name: Deploy

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: macos
            os: macos-latest
            target: aarch64-apple-darwin

          - build: windows-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build Binary
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="rust-action-experiments"
          dirname="${binary_name}-${VERSION}-${{ matrix.target }}"
          mkdir "$dirname"
          binary_suffix=
          if [[ ${{ matrix.target }} == x86_64-pc-windows-* ]]; then
            binary_suffix=".exe"
          fi
          mv "target/${{ matrix.target }}/release/${binary_name}${binary_suffix}" "$dirname"

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            ASSET=$dirname.zip
            certutil -hashfile "$ASSET" SHA256 > "$ASSET.sha256"
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            ASSET=$dirname.tar.gz
            shasum -a 256 "$ASSET" > "$ASSET.sha256"
          fi
          echo "ASSET=$ASSET" >> $GITHUB_ENV
          echo "CHECKSUM=$ASSET.sha256" >> $GITHUB_ENV
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ env.ASSET }}
            ${{ env.CHECKSUM }}
    outputs:
      ${{ matrix.os }}: ${{ matrix.target }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
    - build
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - run: |
          echo "${{ needs.build.outputs }}"
          mkdir packages
          cp artifacts/x86_64-unknown-linux-musl/* packages
          cp artifacts/aarch64-apple-darwin/* packages
          cp artifacts/x86_64-pc-windows-msvc/* packages
      - uses: softprops/action-gh-release@v2
        with:
          files: packages/*
